name: Quarkus CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MVN: mvn --show-version --batch-mode
    steps:
    - name: JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Cache ~/.m2
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Docker login registry.redhat.io
      uses: docker/login-action@v1.8.0
      with:
        registry: registry.redhat.io
        username: ${{ secrets.REDHAT_USR }}
        password: ${{ secrets.REDHAT_PWD }}
        logout: true
    - name: Docker login docker.io
      uses: docker/login-action@v1.8.0
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USR }}
        password: ${{ secrets.DOCKERHUB_PWD }}
        logout: true
    - name: Checkout
      uses: actions/checkout@v2
    - name: mvn clean compile
      run: $MVN clean compile
    - name: mvn test
      run: $MVN test
    - name: mvn package -Dquarkus.container-image.push=true -DskipTests
      run: $MVN package -Dquarkus.container-image.push=true -DskipTests
  build-native:
    runs-on: ubuntu-latest
    env:
      MVN: mvn --show-version --batch-mode
    steps:
    - name: GraalVM 21.0.0.2
      uses: DeLaGuardo/setup-graalvm@4.0
      with:
        graalvm: 21.0.0.2
        java: java11
    - name: gu install native-image
      run: gu install native-image
    - name: Cache ~/.m2
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Docker login registry.redhat.io
      uses: docker/login-action@v1.8.0
      with:
        registry: registry.redhat.io
        username: ${{ secrets.REDHAT_USR }}
        password: ${{ secrets.REDHAT_PWD }}
        logout: true
    - name: Checkout
      uses: actions/checkout@v2
    - name: docker-compose version
      run: docker-compose version
    - name: docker-compose up keycloak postgresql
      run: docker-compose up --detach keycloak postgresql && sleep 9
    - name: docker-compose run liquibase
      run: docker-compose run --rm --name liquibase liquibase
    - name: mvn clean verify -Pnative
      run: $MVN clean verify -Pnative
